# ~/.zshrc.pre
if [[ -f $HOME/.zinit/module/Src/zdharma_continuum/zinit.so ]]; then
  module_path+=( "$HOME/.zinit/module/Src" )
  zmodload zdharma_continuum/zinit
fi

# This is sort of a hack to enable/disable automatically starting tmux without
# having to create a file on the remote host, and without passing extra
# environment variables (which is often disabled by sysadmins). We add an extra
# bit to $TERM on the client, since that's always passed through by ssh.
if [ "${TERM%.autotmux-*}" != "$TERM" ]; then
  # this will be read in ~/.tmux/autotmux.zsh
  AUTOTMUX=${TERM#*.autotmux-}
  # reset $TERM, so the shell gets the correct value
  TERM=${TERM%.autotmux-*}
fi

cache_dir="$HOME/.zsh/cache"
if ! [[ -d "$cache_dir" ]]; then
  mkdir -p "$cache_dir"
fi

# GRML settings
export COMMAND_NOT_FOUND=0     # disable command not found hook
export GRML_COMP_CACHING='no'  # handled by antigen
export GRML_NO_APT_ALIASES=1   # disable apt-* aliases
export GRML_NO_SMALL_ALIASES=1 # disable extraneous aliases
export REPORTTIME=5  # show time info for commands that run longer than 5 seconds
export COMPDUMPFILE="$cache_dir/zcompdump"  # use unified compdump file

# disable persistent dirstack
zstyle ':grml:chpwd:dirstack' enable false

# load Zinit before compinit
declare -A ZINIT
ZINIT[ZCOMPDUMP_PATH]="$COMPDUMPFILE"
source "$HOME/.zinit/bin/zinit.zsh"

# patch out chpwd hook in @zinit-scheduler, as it starts duplicate sched chains
() {
  if (( $+commands[patch] )); then
    local patchfile result
    local -a patchopts
    patchfile=$HOME/.homesick/repos/zsh/zinit-scheduler-fix.patch
    patchopts=(
      --ignore-whitespace
      --silent  # no messages if patch succeeds
      --strip=1
      --forward
      --batch
      --output=-  # output patched file to stdout
      --reject-file=-  # discard rejects
    )
    if result=$(patch "${patchopts[@]}" =(print -r -- $functions[@zinit-scheduler]) $patchfile); then
      functions[@zinit-scheduler]=$result
    else
      print -ru2 'Patching @zinit-scheduler to remove chpwd hook failed'
    fi
  else
    local -a lines
    lines=(${(@f)functions[@zinit-scheduler]})
    if [[ $lines[45] == $'\t\tadd-zsh-hook -- chpwd @zinit-scheduler' ]]; then
      lines[45]=()
      functions[@zinit-scheduler]=${(@F)lines}
    else
      print -ru2 'Manually patching @zinit-scheduler to remove chpwd hook failed'
    fi
  fi
}

# add custom completions before compinit
fpath[1,0]=("$HOME/.zsh/completions")
fpath=($^fpath(N-/))

# enable the vi keymap before compinit so that any completion files with
# `#compdef -k` put their bindings there rather than the emacs keymap
bindkey -v
