# ~/.zshrc.pre
if [[ -f $HOME/.zinit/module/Src/zdharma_continuum/zinit.so ]]; then
  module_path+=( "$HOME/.zinit/module/Src" )
  zmodload zdharma_continuum/zinit
fi

# workaround for zsh Lmod error: The following module(s) are unknown: ""
# The error occurs in /etc/profile.d/zz-cray-pe.sh: if $site_module_list is
# empty, $mlist will have a trailing space. zsh doesn't do word splitting on
# unquoted variables like bash does (unless the SH_WORD_SPLIT option is set),
# so the space is retained in `echo ${mlist}`, leading to a trailing : in
# $LMOD_SYSTEM_DEFAULT_MODULES.
if [[ $LMOD_SYSTEM_NAME == frontier ]]; then
  if [[ $(module --redirect list) == 'No modules loaded' ]] && [[ ${LMOD_SYSTEM_DEFAULT_MODULES: -1} == : ]]; then
    echo 'Working around Lmod error...'
    LMOD_SYSTEM_DEFAULT_MODULES=${LMOD_SYSTEM_DEFAULT_MODULES%:}
    module --initial_load --no_redirect restore && echo 'Default modules loaded successfully.'
    export __fixed_lmod=true
  elif [[ -z $__fixed_lmod ]]; then
    echo 'Modules appear to be working properly; please remove this workaround from ~/.zprofile if there was no error message from Lmod.'
  fi
fi

# This is sort of a hack to enable/disable automatically starting tmux without
# having to create a file on the remote host, and without passing extra
# environment variables (which is often disabled by sysadmins). We add an extra
# bit to $TERM on the client, since that's always passed through by ssh.
if [ "${TERM%.autotmux-*}" != "$TERM" ]; then
  # this will be read in ~/.tmux/autotmux.zsh
  AUTOTMUX=${TERM#*.autotmux-}
  # reset $TERM, so the shell gets the correct value
  TERM=${TERM%.autotmux-*}
fi

cache_dir="$HOME/.zsh/cache"
if ! [[ -d "$cache_dir" ]]; then
  mkdir -p "$cache_dir"
fi

# GRML settings
export COMMAND_NOT_FOUND=0     # disable command not found hook
export GRML_COMP_CACHING='no'  # handled by antigen
export GRML_NO_APT_ALIASES=1   # disable apt-* aliases
export GRML_NO_SMALL_ALIASES=1 # disable extraneous aliases
export REPORTTIME=5  # show time info for commands that run longer than 5 seconds
export COMPDUMPFILE="$cache_dir/zcompdump"  # use unified compdump file

# disable persistent dirstack
zstyle ':grml:chpwd:dirstack' enable false

# load Zinit before compinit
declare -A ZINIT
ZINIT[ZCOMPDUMP_PATH]="$COMPDUMPFILE"
source "$HOME/.zinit/bin/zinit.zsh"

# add custom completions before compinit
fpath[1,0]=("$HOME/.zsh/completions")
fpath=($^fpath(N-/))

# enable the vi keymap before compinit so that any completion files with
# `#compdef -k` put their bindings there rather than the emacs keymap
bindkey -v
